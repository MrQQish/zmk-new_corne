#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10
#define U_MS_U &mmv MOVE_UP
#define U_MS_D &mmv MOVE_DOWN
#define U_MS_L &mmv MOVE_LEFT
#define U_MS_R &mmv MOVE_RIGHT

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD0";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };

        mmv {
            acceleration-exponent = <1>;      // 1
            time-to-max-speed-ms = <900>;    // 40
            delay-ms = <0>;                   // 0
        };

        msc {
            acceleration-exponent = <1>;      // 0
            time-to-max-speed-ms = <400>;      // 500
            delay-ms = <0>;                   // 10
        };

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        label = "RGB_ENCODER";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    combos {
        compatible = "zmk,combos";

        escape {
            bindings = <&kp ESCAPE>;
            key-positions = <41 45>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        AUTISM {
            display-name = "TISM";

            // --------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |                ↑    |  Y  |  U   |  I  |  O  |  P  | BKSP |      &kp UP_ARROW 
            // | SHIFT |  A  |  S  |  D  |  F  |  G  |               ↓    |  H  |  J   |  K  |  L  |  ;  |  '   | 
            // | CTRL |  Z  |  X  |  C  |  V  |  B  |                ←    |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |                →    | ENT | RSE  | ALT |
            //                                                      enter

            bindings = <
&lt 4 ESCAPE        &kp Q             &kp W               &kp F           &kp P    &trans         &mmv MOVE_UP     &trans       &kp Y    &kp L              &kp U               &kp B             &trans
&mt LEFT_SHIFT TAB  &hm LEFT_SHIFT A             &hm LEFT_CONTROL  R               &hm LEFT_ALT S           &kp T    &kp V          &mmv MOVE_DOWN   &kp J        &kp E    &hm LEFT_ALT I              &hm LEFT_CONTROL  O               &hm LEFT_SHIFT N             &mt RCTRL RET
&trans             &kp Z  &kp X  &kp C  &kp D    &trans         &mmv MOVE_LEFT   &trans       &kp H     &kp  M     &kp G  &kp K  &trans
                                      &kp C_PLAY_PAUSE    &kp LEFT_GUI    &kp TAB  &lt 1 SPACE    &mmv MOVE_RIGHT  &lt 1 SPACE  &kp RET  &kp K_APPLICATION
                                                                                                  &mkp LCLK
            >;

            label = "QWERTY";
            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        SYMBOL {
            bindings = <
&trans  &trans       &kp SQT     &kp FSLH   &kp MINUS     &trans          &trans     &trans           &kp EQUAL        &kp BSLH       &kp GRAVE   &trans       &trans
&trans  &hm LEFT_SHIFT  LS(DQT)   &hm LEFT_CONTROL LS(LT)  &hm LEFT_ALT LBKT   &kp LS(LBRC)  &kp LS(LPAR)    &trans     &kp LS(RPAR)     &kp LS(RBRC)     &hm LEFT_ALT RBKT       &hm LEFT_CONTROL  LS(GT)  &hm LEFT_SHIFT LS(DQT)  &trans
&trans  &trans       &kp COLON   &kp COMMA  &kp SEMI      &trans          &trans     &trans           &kp DOT          &kp LS(UNDER)  &kp COLON   &trans       &trans
                     &trans      &trans     &lt 3 DEL     &lt 3 DEL       &trans     &lt 2 BACKSPACE  &lt 2 BACKSPACE  &trans
                                                                          &mkp RCLK
            >;

            label = "SYMBOL";
            sensor-bindings = <&inc_dec_kp C_NEXT C_PREVIOUS>;
        };

        FUNCTION {
            bindings = <
&trans  &kp F7  &kp F8  &kp F9  &kp F12  &trans    &trans     &trans  &kp HOME  &kp PG_DN  &kp PG_UP  &kp END    &trans
&trans  &hm LEFT_SHIFT F4  &hm LEFT_CONTROL F5  &hm LEFT_ALT F6  &kp F11  &trans    &trans     &trans  &kp LEFT  &hm LEFT_ALT DOWN   &hm LEFT_CONTROL UP     &hm LEFT_SHIFT  RIGHT  &trans
&trans  &kp F1  &kp F2  &kp F3  &kp F10  &trans    &trans     &trans  &kp HOME  &kp PG_DN  &kp PG_UP  &kp END    &trans
                &trans  &trans  &trans   &trans    &trans     &trans  &trans    &trans
                                                   &mkp MCLK
            >;

            label = "FN";
            sensor-bindings = <&scroll_encoder>;
        };

        NUMBER {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &kp N7  &kp N8  &kp N9  &kp SPACE  &trans
&trans  &kp LEFT_SHIFT   &kp LEFT_CONTROL    &kp LEFT_ALT   &trans  &trans    &trans  &none   &kp N4  &kp N5  &kp N6  &kp N0     &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &kp N1  &kp N2  &kp N3  &kp DOT    &trans
                &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans
                                                  &trans
            >;

            label = "NUMBER";
            sensor-bindings = <&scroll_encoder>;
        };

        BOARD {
            display-name = "BOARD";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&bootloader   &bl BL_TOG       &bl BL_INC      &bl BL_DEC       &trans        &soft_off          &trans  &soft_off                       &trans                          &trans                            &trans                             &trans  &bootloader
&out OUT_TOG  &bt BT_CLR_ALL   &bt BT_SEL 0    &bt BT_SEL 1     &bt BT_SEL 2  &bt BT_SEL 3       &trans  &rgb_ug RGB_COLOR_HSB(0,0,100)  &rgb_ug RGB_COLOR_HSB(0,95,41)  &rgb_ug RGB_COLOR_HSB(37,100,50)  &rgb_ug RGB_COLOR_HSB(274,100,50)  &trans  &trans
&trans        &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &rgb_ug RGB_TOG  &trans        &rgb_ug RGB_EFF    &trans  &rgb_ug RGB_EFR                 &rgb_ug RGB_SPI                 &rgb_ug RGB_BRI                   &rgb_ug RGB_BRD                    &trans  &trans
                               &trans          &trans           &trans        &trans             &trans  &trans                          &trans                          &trans
                                                                                                 &trans
            >;

            label = "BOARD";
            sensor-bindings = <&rgb_encoder>;
        };
    };
};
